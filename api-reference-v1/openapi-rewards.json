{
  "openapi": "3.0.1",
  "info": {
    "title": "FirstPromoter Rewards API",
    "description": "Rewards API allows you to manage the rewards of your promoters.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://firstpromoter.com/api/v1/rewards"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/create": {
      "post": {
        "description": "With this endpoint you can assign a reward/commission generated by a lead/customer and it will be recorded to the promoter which referred the lead/customer.You can find the lead/customer by `lead_id` , `email` or `uid`.<br/><br/>If the reward/commission is not generated by a lead/customer, you can assign it directly to a promoter through its promotion. You can find the promotion by `promotion_id` or `ref_id`. <Note>Note: To assign rewards/commission for sales via the API use the Tracking API</Note><Note>If this call is successful and you enabled 'Promoter gets a new commission/reward' emails for the campaign, it will send emails to the promoter. To skip the emails, set the `skip_email_notification` parameter to `true`</Note><Tip>**HTTP Request** <br/>`POST https://firstpromoter.com/api/v1/rewards/create`</Tip>",
        "parameters": [
          {
            "name": "lead_id",
            "in": "query",
            "description": "Lead's id who generated the reward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "query",
            "description": "UID of the lead who generated the reward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email of the lead who generated the reward.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promotion_id",
            "in": "query",
            "description": "Promotion id of the promoter who owns the reward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ref_id",
            "in": "query",
            "description": "Promotion referral id of the who owns the reward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reward_type",
            "in": "query",
            "required": true,
            "description": "Type of reward",
            "schema": {
              "type": "string",
              "enum": [
                "cash",
                "points",
                "credits",
                "free_months",
                "discount_per",
                "discount_mon"
              ]
            }
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "description": "Amount of the reward. For reward_type `cash`(monetary commission) the amount is in cents",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "can be `approved`(default if this param is omitted), `pending` or `denied`",
            "schema": {
              "type": "string",
              "enum": ["approved", "pending", "denied"]
            }
          },
          {
            "name": "skip_email_notification",
            "in": "query",
            "description": "Set this to `true` to skip email notifications. Default is `false`.",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rewards created response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardWithoutLead"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity error 422 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/update": {
      "put": {
        "description": "You can use this endpoint to change the status of a reward or commission. You can identify the reward or commission by its id or the id of the event that generated the reward.<Note>For Stripe, Recurly and Chargebee subscription the `event_id` value is the Invoice id, for Stripe one time charges is the charge id.</Note><Tip>**HTTP Request** <br/>`PUT https://firstpromoter.com/api/v1/rewards/update`</Tip>",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "`required if the event_id is null` \n\n Id of the reward inside FirstPromoter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event_id",
            "in": "query",
            "description": "`required if the id is null` \n\n Id of the event that generated the reward",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "New status of the reward",
            "schema": {
              "type": "string",
              "enum": ["approved", "pending", "denied"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Update reward response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RewardWithoutLead"
                }
              }
            }
          },
          "401": {
            "description": "Authentication Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity error 422 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    },
    "/list": {
      "get": {
        "description": "With this endpoint you can list all rewards and commissions assigned to a promotion, promoter, campaign or entire account using the API.<Note>Pagination details are held on response headers. Add `--include` option on `curl` request to see the pagination details format and links to next pages.</Note><Tip>**HTTP Request** <br/> `GET https://firstpromoter.com/api/v1/leads/list`</Tip>",
        "parameters": [
          {
            "name": "promotion_id",
            "in": "query",
            "description": "List all rewards and commissions assigned to this promotion id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ref_id",
            "in": "query",
            "description": "List all rewards and commissions assigned to a promotion - find promotion by `ref_id`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "promoter_id",
            "in": "query",
            "description": "List all rewards and commissions assigned to a promoter",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "campaign_id",
            "in": "query",
            "description": "List all rewards and commissions available to a campaign",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get rewards response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RewardWithoutLead"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authentication error 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity error 422 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RewardWithoutLead": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the reward",
            "type": "number"
          },
          "status": {
            "description": "status of the reward.",
            "type": "string",
            "enum": ["approved", "pending", "denied"]
          },
          "amount": {
            "description": "amount of the reward. For reward_type `cash`(monetary commission) the amount is in cents",
            "type": "integer"
          },
          "unit": {
            "description": "The reward unit.",
            "type": "string",
            "enum": ["cash", "credits", "points", "free_months"]
          },
          "created_at": {
            "description": "ISO date string at which the reward is created",
            "type": "string"
          },
          "lead": {},
          "event_id": {
            "type": "string"
          },
          "conversion_amount": {
            "type": "integer"
          },
          "tier_level": {
            "description": "The reward tier level",
            "type": "integer"
          },
          "promoter": {
            "$ref": "#/components/schemas/PromoterWithoutPromotionsAndProfile"
          },
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          }
        }
      },
      "Lead": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Lead's id",
            "type": "integer"
          },
          "status": {
            "description": "Lead's or customer's status",
            "type": "string"
          },
          "uid": {
            "description": "Lead's or customer's user ID inside your application."
          },
          "email": {
            "description": "Lead's or customer's email",
            "type": "string"
          },
          "customer_since": {
            "description": "ISO date string at which the lead became a customer.",
            "type": "string"
          },
          "cancelled_at": {
            "description": "ISO date string at which the lead/customer cancelled",
            "type": "string"
          },
          "plan_name": {
            "type": "string"
          },
          "suspicion": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "created_at": {
            "description": "ISO date string at which the lead/customer signed up",
            "type": "string"
          },
          "split_promotion_id": {},
          "custom_fields": {},
          "split_percentage_value": {},
          "visitor_sub_id": {},
          "promotion": {
            "$ref": "#/components/schemas/Promotion"
          },
          "promoter": {
            "$ref": "#/components/schemas/PromoterWithoutPromotionsAndProfile"
          }
        }
      },
      "SocialAccounts": {
        "type": "object",
        "properties": {
          "twitter": {
            "type": "object",
            "properties": {
              "url": {
                "description": "promoter's twitter url",
                "type": "string"
              }
            }
          },
          "youtube": {
            "type": "object",
            "properties": {
              "url": {
                "description": "promoter's youtube url",
                "type": "string"
              }
            }
          },
          "facebook": {
            "type": "object",
            "properties": {
              "url": {
                "description": "promoter's fackbook url",
                "type": "string"
              }
            }
          },
          "linkedin": {
            "type": "object",
            "properties": {
              "url": {
                "description": "promoter's linkedin url",
                "type": "string"
              }
            }
          },
          "instagram": {
            "type": "object",
            "properties": {
              "url": {
                "description": "promoter's instagram url",
                "type": "string"
              }
            }
          }
        }
      },
      "PromoterProfile": {
        "type": "object",
        "properties": {
          "first_name": {
            "description": "promoter's first name",
            "type": "string"
          },
          "last_name": {
            "description": "promoter's last name",
            "type": "string"
          },
          "website": {
            "description": "promoter's website",
            "type": "string"
          },
          "company_name": {
            "description": "promoter's campany name",
            "type": "string"
          },
          "phone_number": {
            "description": "promoter's phone number",
            "type": "string"
          },
          "address": {
            "description": "promoter's address",
            "type": "string"
          },
          "vat_id": {
            "description": "promoter's vat id",
            "type": "string"
          },
          "country": {
            "description": "promoter's country",
            "type": "string"
          },
          "paypal_email": {
            "description": "promoter's Paypal Email address",
            "type": "string"
          },
          "avatar_url": {
            "description": "URL of the profile picture promoters can see on their dashboard",
            "type": "string"
          },
          "description": {
            "description": "A note/description of promoter",
            "type": "string"
          },
          "social_accounts": {
            "$ref": "#/components/schemas/SocialAccounts"
          }
        }
      },
      "Promotion": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID of the promotion.",
            "type": "number"
          },
          "status": {
            "description": "Current offer status.",
            "type": "string"
          },
          "ref_id": {
            "type": "string"
          },
          "promo_code": {
            "description": "The unique coupon id or coupon code from your billing provider to assign to this affiliate for coupon tracking. This is also known as promo code.",
            "type": "string"
          },
          "customer_promo_code": {
            "description": "This is discount code/promotion code your customer used or applied on your checkout page. This is also known as display code",
            "type": "string"
          },
          "target_reached_at": {
            "type": "string"
          },
          "promoter_id": {
            "description": "ID of the promoter/affiliate.",
            "type": "number"
          },
          "campaign_id": {
            "description": "ID of the campaign where the promotion runs.",
            "type": "number"
          },
          "referral_link": {
            "description": "Promoter's referral link",
            "type": "string"
          },
          "current_offer": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The reward id",
                "type": "number"
              },
              "name": {
                "description": "The reward name",
                "type": "string"
              },
              "amount": {
                "description": "The reward amount",
                "type": "number"
              },
              "unit": {
                "description": "The reward unit (e.g., 'credits', 'free_months', 'cash').",
                "type": "string"
              },
              "default_promo_code": {
                "type": "string"
              }
            }
          },
          "current_referral_reward": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "amount": {
                "type": "number"
              },
              "unit": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "per_of_sale": {
                "type": "number"
              },
              "default_promo_code": {
                "type": "string"
              }
            }
          },
          "current_promotion_reward": {
            "type": "object"
          },
          "current_target_reward": {
            "type": "object"
          },
          "campaign_name": {
            "type": "string"
          },
          "hidden": {
            "type": "boolean"
          },
          "visitors_count": {
            "type": "number"
          },
          "leads_count": {
            "type": "number"
          },
          "customers_count": {
            "type": "number"
          },
          "refunds_count": {
            "type": "number"
          },
          "cancellations_count": {
            "type": "number"
          },
          "sales_count": {
            "type": "number"
          },
          "sales_total": {
            "type": "number"
          },
          "refunds_total": {
            "type": "number"
          },
          "active_customers_count": {
            "type": "number"
          }
        }
      },
      "PromoterWithoutPromotionsAndProfile": {
        "type": "object",
        "properties": {
          "id": {
            "description": "promoter's id",
            "type": "integer"
          },
          "status": {
            "description": "promoter's status",
            "type": "string"
          },
          "cust_id": {
            "description": "customer/user ID of the promoter inside your application. This will be included in the webhook event and can be used to identify the promoter in your system if you scribscibe for FirstPromoter's 'promoter_accepted' webhook."
          },
          "email": {
                        "description": "Promoter's email",
            "type": "string"
          },
          "created_at": {
            "description": "ISO date string at which the promoter signed up",
            "type": "string"
          },
          "temp_password": {
                        "description": "A temporary password the promoter can use to log in to their dashboard if you don't use authentication tokens(auth_token) to sign promoters in automatically.",
            "type": "string"
          },
          "default_promotion_id": {
                        "description": "Promoter's default promotion id",
            "type": "number"
          },
          "pref": {
                        "description": "Promoter's parent referral id.",
            "type": "string"
          },
          "default_ref_id": {
                        "description": "Promoter's default referral id",
            "type": "string"
          },
          "note": {
            "description": "A note/description of promoter",
            "type": "string"
          },
          "w8_form_url": {},
          "w9_form_url": {},
          "parent_promoter_id": {
            "description": "parent promoter id",
            "type": "string"
          },
          "earnings_balance": {
            "description": "promoter's earnings balance",
            "type": "object"
          },
          "current_balance": {
            "description": "promoter's current balance",
            "type": "object"
          },
          "paid_balance": {
            "description": "promoter's paid balance",
            "type": "object"
          },
          "auth_token": {
            "description": "authetication token generated when the promoter was created",
            "type": "string"
          }
        }
      },
      "AuthenticationError": {
        "type": "string"
      },
      "NotFoundError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-KEY"
      }
    }
  }
}
