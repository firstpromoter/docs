{
  "openapi": "3.0.0",
  "info": {
    "title": "FirstPromoter Admin API - Promoter Campaigns",
    "version": "1.0.0",
    "description": "Admin API endpoints for managing promoter campaigns in FirstPromoter"
  },
  "servers": [
    {
      "url": "https://v2.firstpromoter.com/api/v2/company",
      "description": "Staging server"
    }
  ],
  "security": [
    {
      "BearerAuth": [],
      "accountId": []
    }
  ],
  "paths": {
    "/promoter_campaigns": {
      "get": {
        "summary": "Get available promoter campaigns",
        "tags": ["Promoter Campaigns"],
        "description": "Get available promoter campaigns for current company \n <Tip>**HTTP Request** <br/>`GET https://v2.firstpromoter.com/api/v2/company/promoter_campaigns`</Tip>",
        "parameters": [
          {
            "in": "query",
            "name": "filters[ids][]",
            "description": "Filter by promoter campaign IDs",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of promoter campaigns",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromoterCampaign"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/promoter_campaigns/search": {
      "get": {
        "summary": "Search promoter campaigns",
        "tags": ["Promoter Campaigns"],
        "description": "Returns results for promoter campaigns dropdown search. Max results: 5 \n <Tip>**HTTP Request** <br/>`GET https://v2.firstpromoter.com/api/v2/company/promoter_campaigns/search`</Tip>",
        "parameters": [
          {
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Search query string"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results (limited to 5 items maximum)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PromoterCampaign"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/promoter_campaigns/{id}": {
      "put": {
        "summary": "Update promoter campaign",
        "tags": ["Promoter Campaigns"],
        "description": "Update promoter campaign based on id \n <Tip>**HTTP Request** <br/>`PUT https://v2.firstpromoter.com/api/v2/company/promoter_campaigns/{id}`</Tip>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the promoter campaign"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ref_token": {
                    "type": "string",
                    "description": "Reference token for the promoter campaign"
                  },
                  "state": {
                    "type": "string",
                    "enum": [
                      "pending",
                      "accepted",
                      "rejected",
                      "blocked",
                      "inactive"
                    ],
                    "description": "State of the promoter campaign"
                  },
                  "coupon": {
                    "type": "string",
                    "description": "Coupon code"
                  },
                  "display_coupon": {
                    "type": "string",
                    "description": "Display coupon code"
                  },
                  "direct_url": {
                    "type": "string",
                    "description": "Direct URL for the promoter campaign"
                  },
                  "promoter_rewards_customized": {
                    "type": "boolean",
                    "description": "Whether promoter rewards are customized"
                  },
                  "referral_rewards_customized": {
                    "type": "boolean",
                    "description": "Whether referral rewards are customized"
                  },
                  "rewards_for_promoters": {
                    "type": "array",
                    "description": "Rewards for promoters",
                    "items": {
                      "type": "object",
                      "required": ["apply_on", "product_ids", "reward_id"],
                      "properties": {
                        "apply_on": {
                          "type": "string",
                          "enum": [
                            "monthly",
                            "yearly",
                            "one_time",
                            "all",
                            "specific"
                          ],
                          "description": "When to apply the reward"
                        },
                        "product_ids": {
                          "type": "array",
                          "description": "List of product IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "reward_id": {
                          "type": "integer",
                          "description": "ID of the reward"
                        }
                      }
                    }
                  },
                  "rewards_for_referrals": {
                    "type": "array",
                    "description": "Rewards for referrals",
                    "items": {
                      "type": "object",
                      "required": ["apply_on", "product_ids", "reward_id"],
                      "properties": {
                        "apply_on": {
                          "type": "string",
                          "enum": [
                            "monthly",
                            "yearly",
                            "one_time",
                            "all",
                            "specific"
                          ],
                          "description": "When to apply the reward"
                        },
                        "product_ids": {
                          "type": "array",
                          "description": "List of product IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "reward_id": {
                          "type": "integer",
                          "description": "ID of the reward"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated promoter campaign",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PromoterCampaignDetailed"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Promoter campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/promoter_campaigns/{id}/referral_links": {
      "get": {
        "summary": "Get referral links",
        "tags": ["Promoter Campaigns"],
        "description": "Get referral links associated with this promoter campaign \n <Tip>**HTTP Request** <br/>`GET https://v2.firstpromoter.com/api/v2/company/promoter_campaigns/{id}/referral_links`</Tip>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the promoter campaign"
          }
        ],
        "responses": {
          "200": {
            "description": "List of referral links",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReferralLink"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Promoter campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/promoter_campaigns/{id}/chart_data": {
      "get": {
        "summary": "Get chart data",
        "tags": ["Promoter Campaigns"],
        "description": "Get data used for chart \n <Tip>**HTTP Request** <br/>`GET https://v2.firstpromoter.com/api/v2/company/promoter_campaigns/{id}/chart_data`</Tip>",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the promoter campaign"
          },
          {
            "in": "query",
            "name": "period_from",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "Start date for the chart data"
          },
          {
            "in": "query",
            "name": "period_to",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "description": "End date for the chart data"
          },
          {
            "in": "query",
            "name": "selection",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "revenue",
                "clicks",
                "referrals",
                "customers",
                "cancellations"
              ]
            },
            "description": "Selection type for the chart data"
          },
          {
            "in": "query",
            "name": "with_totals",
            "schema": {
              "type": "boolean"
            },
            "description": "If true, it will also return the totals for the period"
          }
        ],
        "responses": {
          "200": {
            "description": "Chart data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChartData"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Promoter campaign not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "AccountId": {
        "name": "Account-ID",
        "in": "header",
        "required": true,
        "description": "Account identifier that specifies which account is making the request",
        "schema": {
          "type": "string",
          "example": "acc_123456"
        }
      }
    },
    "schemas": {
      "PromoterCampaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the promoter campaign"
          },
          "campaign_id": {
            "type": "integer",
            "description": "ID of the campaign"
          },
          "promoter_id": {
            "type": "integer",
            "description": "ID of the promoter"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the promoter campaign was created"
          },
          "promoter": {
            "$ref": "#/components/schemas/Promoter"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          }
        }
      },
      "PromoterCampaignDetailed": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the promoter campaign"
          },
          "campaign_id": {
            "type": "integer",
            "description": "ID of the campaign"
          },
          "promoter_id": {
            "type": "integer",
            "description": "ID of the promoter"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Date and time when the promoter campaign was created"
          },
          "promoter": {
            "$ref": "#/components/schemas/Promoter"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          },
          "state": {
            "type": "string",
            "enum": ["pending", "accepted", "rejected", "blocked", "inactive"],
            "description": "State of the promoter campaign"
          },
          "stats": {
            "type": "object",
            "properties": {
              "clicks_count": {
                "type": "integer",
                "description": "Number of clicks"
              },
              "referrals_count": {
                "type": "integer",
                "description": "Number of referrals"
              },
              "sales_count": {
                "type": "integer",
                "description": "Number of sales"
              },
              "customers_count": {
                "type": "integer",
                "description": "Number of customers"
              },
              "revenue_amount": {
                "type": "number",
                "description": "Revenue amount"
              }
            }
          },
          "coupon": {
            "type": "string",
            "nullable": true,
            "description": "Coupon code"
          },
          "display_coupon": {
            "type": "string",
            "nullable": true,
            "description": "Display coupon code"
          },
          "ref_token": {
            "type": "string",
            "description": "Reference token"
          },
          "ref_link": {
            "type": "string",
            "description": "Reference link"
          },
          "is_customized": {
            "type": "boolean",
            "description": "Whether the promoter campaign is customized"
          },
          "direct_url": {
            "type": "string",
            "nullable": true,
            "description": "Direct URL"
          },
          "referral_rewards_customized": {
            "type": "boolean",
            "description": "Whether referral rewards are customized"
          },
          "promoter_rewards_customized": {
            "type": "boolean",
            "description": "Whether promoter rewards are customized"
          },
          "rewards_for_promoters": {
            "type": "array",
            "description": "Rewards for promoters",
            "items": {
              "type": "object",
              "properties": {
                "apply_on": {
                  "type": "string",
                  "enum": ["monthly", "yearly", "one_time", "all", "specific"],
                  "description": "When to apply the reward"
                },
                "product_ids": {
                  "type": "array",
                  "description": "List of product IDs",
                  "items": {
                    "type": "integer"
                  }
                },
                "reward_id": {
                  "type": "integer",
                  "description": "ID of the reward"
                },
                "reward": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the reward"
                    },
                    "promoter_reward_type": {
                      "type": "string",
                      "nullable": true,
                      "description": "Type of promoter reward"
                    },
                    "hide_reward": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "Whether the reward is hidden"
                    },
                    "tier_level": {
                      "type": "integer",
                      "description": "Tier level"
                    },
                    "coupon": {
                      "type": "string",
                      "nullable": true,
                      "description": "Coupon code"
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "nullable": true,
                  "description": "List of products"
                }
              }
            }
          },
          "rewards_for_referrals": {
            "type": "array",
            "description": "Rewards for referrals",
            "items": {
              "type": "object",
              "properties": {
                "apply_on": {
                  "type": "string",
                  "enum": ["monthly", "yearly", "one_time", "all", "specific"],
                  "description": "When to apply the reward"
                },
                "product_ids": {
                  "type": "array",
                  "description": "List of product IDs",
                  "items": {
                    "type": "integer"
                  }
                },
                "reward_id": {
                  "type": "integer",
                  "description": "ID of the reward"
                },
                "reward": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the reward"
                    },
                    "promoter_reward_type": {
                      "type": "string",
                      "nullable": true,
                      "description": "Type of promoter reward"
                    },
                    "hide_reward": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "Whether the reward is hidden"
                    },
                    "tier_level": {
                      "type": "integer",
                      "description": "Tier level"
                    },
                    "coupon": {
                      "type": "string",
                      "nullable": true,
                      "description": "Coupon code"
                    }
                  }
                },
                "products": {
                  "type": "array",
                  "nullable": true,
                  "description": "List of products"
                }
              }
            }
          },
          "promo_codes": {
            "type": "array",
            "description": "Promotion codes",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Promoter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the promoter"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the promoter"
          },
          "name": {
            "type": "string",
            "description": "Name of the promoter"
          }
        }
      },
      "Campaign": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the campaign"
          },
          "name": {
            "type": "string",
            "description": "Name of the campaign"
          },
          "color": {
            "type": "string",
            "nullable": true,
            "description": "Color of the campaign"
          }
        }
      },
      "ReferralLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the referral link"
          },
          "name": {
            "type": "string",
            "description": "Name of the referral link"
          },
          "url": {
            "type": "string",
            "description": "URL of the referral link"
          },
          "is_default": {
            "type": "boolean",
            "nullable": true,
            "description": "Whether the referral link is the default one"
          },
          "source": {
            "type": "string",
            "description": "Source of the referral link"
          },
          "sub_id": {
            "type": "string",
            "nullable": true,
            "description": "Sub ID of the referral link"
          },
          "campaign": {
            "$ref": "#/components/schemas/Campaign"
          }
        }
      },
      "ChartData": {
        "type": "object",
        "properties": {
          "period_from": {
            "type": "string",
            "format": "date",
            "description": "Start date of the period"
          },
          "period_to": {
            "type": "string",
            "format": "date",
            "description": "End date of the period"
          },
          "selection": {
            "type": "string",
            "description": "Selection type"
          },
          "selection_items": {
            "type": "array",
            "description": "Selection items",
            "items": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "string",
                    "format": "date"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          },
          "group_by": {
            "type": "string",
            "description": "Group by parameter (e.g., day, week, month)"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          },
          "errors": {
            "type": "object",
            "description": "Validation errors",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Access token passed as a Bearer token in the Authorization header"
      },
      "accountId": {
        "type": "apiKey",
        "in": "header",
        "name": "Account-ID",
        "description": "Account identifier that specifies which account is making the request"
      }
    }
  }
}
